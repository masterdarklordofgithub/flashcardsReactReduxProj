{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const topicsSlice = createSlice({\n  name: 'topics',\n  initialState: {\n    //This topics object will eventually hold all topics keyed by id\n    topics: {}\n  },\n  reducers: {\n    addTopic: (state, action) => {\n      const {\n        id,\n        name,\n        icon\n      } = action.payload;\n      state.topics[id] = {\n        id,\n        name,\n        icon,\n        //will correspond to an array containing the ids of each quiz associated with the topic. \n        //When a topic is first created, it won’t have any associated quizzes\n        quizIds: []\n      };\n    },\n    addQuizId: (state, action) => {\n      const {\n        quizId,\n        name,\n        topicId,\n        cardIds\n      } = action.payload;\n      state.topics[topicId].quizIds.push(quizId);\n    }\n  },\n  extraReducers: {\n    //adds a quiz’s id to the quizIds array of the topic with which the newly created quiz is associated. \n    //This action will receive the same payload the quizzes slice addQuiz\n    // 'quizzes/addQuiz': (state, action) => {\n    //     const { id, name, topicId, cardIds } = action.payload;\n    //     state.topics[topicId].quizIds.push(id);\n    // }\n  }\n});\n//a selector that selects the topics object nested within initialState\n//Export the selector as well as the \n//action creators and \n//reducer that your slice generates.\nexport const selectTopics = state => state.topics.topics;\nexport const {\n  addTopic\n} = topicsSlice.actions;\nexport const topicsReducer = topicsSlice.reducer;","map":{"version":3,"names":["createSlice","topicsSlice","name","initialState","topics","reducers","addTopic","state","action","id","icon","payload","quizIds","addQuizId","quizId","topicId","cardIds","push","extraReducers","selectTopics","actions","topicsReducer","reducer"],"sources":["/home/adam/flashcardsReactReduxProj/src/features/topics/TopicsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const topicsSlice = createSlice({\n    name: 'topics',\n    initialState: {\n        //This topics object will eventually hold all topics keyed by id\n        topics: {\n\n        }\n    },\n    reducers: {\n        addTopic: (state, action) => {\n            const { id, name, icon } = action.payload;\n            state.topics[id] = {\n                id,\n                name,\n                icon,\n                //will correspond to an array containing the ids of each quiz associated with the topic. \n                //When a topic is first created, it won’t have any associated quizzes\n                quizIds: []\n\n\n            }\n        },\n        addQuizId: (state, action) => {\n            const { quizId, name, topicId, cardIds } = action.payload;\n            state.topics[topicId].quizIds.push(quizId);\n        }\n    },\n    extraReducers: {\n        //adds a quiz’s id to the quizIds array of the topic with which the newly created quiz is associated. \n        //This action will receive the same payload the quizzes slice addQuiz\n        // 'quizzes/addQuiz': (state, action) => {\n        //     const { id, name, topicId, cardIds } = action.payload;\n        //     state.topics[topicId].quizIds.push(id);\n        // }\n    }\n});\n//a selector that selects the topics object nested within initialState\n//Export the selector as well as the \n//action creators and \n//reducer that your slice generates.\nexport const selectTopics = state => state.topics.topics;\nexport const { addTopic } = topicsSlice.actions;\nexport const topicsReducer = topicsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,WAAW,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACV;IACAC,MAAM,EAAE,CAER;EACJ,CAAC;EACDC,QAAQ,EAAE;IACNC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzB,MAAM;QAAEC,EAAE;QAAEP,IAAI;QAAEQ;MAAK,CAAC,GAAGF,MAAM,CAACG,OAAO;MACzCJ,KAAK,CAACH,MAAM,CAACK,EAAE,CAAC,GAAG;QACfA,EAAE;QACFP,IAAI;QACJQ,IAAI;QACJ;QACA;QACAE,OAAO,EAAE;MAGb,CAAC;IACL,CAAC;IACDC,SAAS,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAM;QAAEM,MAAM;QAAEZ,IAAI;QAAEa,OAAO;QAAEC;MAAQ,CAAC,GAAGR,MAAM,CAACG,OAAO;MACzDJ,KAAK,CAACH,MAAM,CAACW,OAAO,CAAC,CAACH,OAAO,CAACK,IAAI,CAACH,MAAM,CAAC;IAC9C;EACJ,CAAC;EACDI,aAAa,EAAE;IACX;IACA;IACA;IACA;IACA;IACA;EAAA;AAER,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAGZ,KAAK,IAAIA,KAAK,CAACH,MAAM,CAACA,MAAM;AACxD,OAAO,MAAM;EAAEE;AAAS,CAAC,GAAGL,WAAW,CAACmB,OAAO;AAC/C,OAAO,MAAMC,aAAa,GAAGpB,WAAW,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}