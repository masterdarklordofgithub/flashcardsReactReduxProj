{"ast":null,"code":"var _jsxFileName = \"/home/adam/flashcards-starting-code-react-v18/src/features/quizzes/Quiz.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link, Navigate, useParams } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport Card from \"../cards/Card\";\n// import quiz selector\n\n//On the '/quizzes/:quizId' page:\n\n//Users can view an individual quiz and flip cards over\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n  const quizzes = {}; // replace this with a call to your selector to get all the quizzes in state\n  const {\n    quizId\n  } = useParams();\n  const quiz = quizzes[quizId];\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: ROUTES.quizzesRoute(),\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: quiz.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"cards-list\",\n      children: quiz.cardIds.map(id => /*#__PURE__*/_jsxDEV(Card, {\n        id: id\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: ROUTES.newQuizRoute(),\n      className: \"button center\",\n      children: \"Create a New Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"D9dYXQCOJ0oIObDRmyRx1985Da4=\", false, function () {\n  return [useParams];\n});\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","Link","Navigate","useParams","ROUTES","Card","jsxDEV","_jsxDEV","Quiz","_s","quizzes","quizId","quiz","to","quizzesRoute","replace","fileName","_jsxFileName","lineNumber","columnNumber","children","name","className","cardIds","map","id","newQuizRoute","_c","$RefreshReg$"],"sources":["/home/adam/flashcards-starting-code-react-v18/src/features/quizzes/Quiz.js"],"sourcesContent":["import React from \"react\";\nimport { Link, Navigate, useParams } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport Card from \"../cards/Card\";\n// import quiz selector\n\n//On the '/quizzes/:quizId' page:\n\n//Users can view an individual quiz and flip cards over\n\nexport default function Quiz() {\n  const quizzes = {}; // replace this with a call to your selector to get all the quizzes in state\n  const { quizId } = useParams();\n  const quiz = quizzes[quizId];\n\n  if (!quiz) {\n    return <Navigate to={ROUTES.quizzesRoute()} replace />\n  }\n\n\n  return (\n    <section>\n      <h1>{quiz.name}</h1>\n      <ul className=\"cards-list\">\n        {quiz.cardIds.map((id) => (\n          <Card key={id} id={id} />\n        ))}\n      </ul>\n      <Link to={ROUTES.newQuizRoute()} className=\"button center\">\n        Create a New Quiz\n      </Link>\n    </section>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,kBAAkB;AAC5D,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,IAAI,MAAM,eAAe;AAChC;;AAEA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAMC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC9B,MAAMS,IAAI,GAAGF,OAAO,CAACC,MAAM,CAAC;EAE5B,IAAI,CAACC,IAAI,EAAE;IACT,oBAAOL,OAAA,CAACL,QAAQ;MAACW,EAAE,EAAET,MAAM,CAACU,YAAY,CAAC,CAAE;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACxD;EAGA,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAKR,IAAI,CAACS;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBZ,OAAA;MAAIe,SAAS,EAAC,YAAY;MAAAF,QAAA,EACvBR,IAAI,CAACW,OAAO,CAACC,GAAG,CAAEC,EAAE,iBACnBlB,OAAA,CAACF,IAAI;QAAUoB,EAAE,EAAEA;MAAG,GAAXA,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLZ,OAAA,CAACN,IAAI;MAACY,EAAE,EAAET,MAAM,CAACsB,YAAY,CAAC,CAAE;MAACJ,SAAS,EAAC,eAAe;MAAAF,QAAA,EAAC;IAE3D;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACV,EAAA,CAvBuBD,IAAI;EAAA,QAEPL,SAAS;AAAA;AAAAwB,EAAA,GAFNnB,IAAI;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}