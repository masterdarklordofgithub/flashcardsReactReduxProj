{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { addQuiz } from '../quizzes/QuizzesSlice';\nexport const topicsSlice = createSlice({\n  name: 'topics',\n  initialState: {\n    //This topics object will eventually hold all topics keyed by id\n    topics: {}\n  },\n  reducers: {\n    addTopic: (state, action) => {\n      const {\n        id,\n        name,\n        icon\n      } = action.payload;\n      state.topics[id] = {\n        id,\n        name,\n        icon,\n        //will correspond to an array containing the ids of each quiz associated with the topic. \n        //When a topic is first created, it won’t have any associated quizzes\n        quizIds: []\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(addQuiz, (state, action) => {\n      const {\n        topicId,\n        id\n      } = action.payload;\n      // check if any topics exist\n      if (state.topics[topicId] === undefined) {\n        return;\n      }\n      // Add the quiz id to the correct topic\n      const quizIdExists = state.topics[topicId].quizIds.includes(id);\n      // avoid adding duplicate quiz ids\n      if (!quizIdExists) {\n        state.topics[topicId].quizIds.push(id);\n      } else {\n        console.log('quiz id', id, 'already exists');\n      }\n    });\n  }\n});\n//a selector that selects the topics object nested within initialState\n//Export the selector as well as the \n//action creators and \n//reducer that your slice generates.\nexport const selectTopics = state => state.topics.topics;\nexport const {\n  addTopic\n} = topicsSlice.actions;\nexport const topicsReducer = topicsSlice.reducer;","map":{"version":3,"names":["createSlice","addQuiz","topicsSlice","name","initialState","topics","reducers","addTopic","state","action","id","icon","payload","quizIds","extraReducers","builder","addCase","topicId","undefined","quizIdExists","includes","push","console","log","selectTopics","actions","topicsReducer","reducer"],"sources":["/home/adam/flashcardsReactReduxProj/src/features/topics/TopicsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { addQuiz } from '../quizzes/QuizzesSlice';\nexport const topicsSlice = createSlice({\n    name: 'topics',\n    initialState: {\n        //This topics object will eventually hold all topics keyed by id\n        topics: {\n\n        }\n    },\n    reducers: {\n        addTopic: (state, action) => {\n            const { id, name, icon } = action.payload;\n            state.topics[id] = {\n                id,\n                name,\n                icon,\n                //will correspond to an array containing the ids of each quiz associated with the topic. \n                //When a topic is first created, it won’t have any associated quizzes\n                quizIds: []\n\n\n            }\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(addQuiz, (state, action) => {\n                const { topicId, id } = action.payload;\n                // check if any topics exist\n                if (state.topics[topicId] === undefined) {\n                    return;\n                }\n                // Add the quiz id to the correct topic\n                const quizIdExists = state.topics[topicId].quizIds.includes(id);\n                // avoid adding duplicate quiz ids\n                if (!quizIdExists) {\n                    state.topics[topicId].quizIds.push(id);\n                } else {\n                    console.log('quiz id', id, 'already exists');\n                }\n            })\n    },\n});\n//a selector that selects the topics object nested within initialState\n//Export the selector as well as the \n//action creators and \n//reducer that your slice generates.\nexport const selectTopics = state => state.topics.topics;\nexport const { addTopic } = topicsSlice.actions;\nexport const topicsReducer = topicsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAO,MAAMC,WAAW,GAAGF,WAAW,CAAC;EACnCG,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACV;IACAC,MAAM,EAAE,CAER;EACJ,CAAC;EACDC,QAAQ,EAAE;IACNC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzB,MAAM;QAAEC,EAAE;QAAEP,IAAI;QAAEQ;MAAK,CAAC,GAAGF,MAAM,CAACG,OAAO;MACzCJ,KAAK,CAACH,MAAM,CAACK,EAAE,CAAC,GAAG;QACfA,EAAE;QACFP,IAAI;QACJQ,IAAI;QACJ;QACA;QACAE,OAAO,EAAE;MAGb,CAAC;IACL;EACJ,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACf,OAAO,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAM;QAAEQ,OAAO;QAAEP;MAAG,CAAC,GAAGD,MAAM,CAACG,OAAO;MACtC;MACA,IAAIJ,KAAK,CAACH,MAAM,CAACY,OAAO,CAAC,KAAKC,SAAS,EAAE;QACrC;MACJ;MACA;MACA,MAAMC,YAAY,GAAGX,KAAK,CAACH,MAAM,CAACY,OAAO,CAAC,CAACJ,OAAO,CAACO,QAAQ,CAACV,EAAE,CAAC;MAC/D;MACA,IAAI,CAACS,YAAY,EAAE;QACfX,KAAK,CAACH,MAAM,CAACY,OAAO,CAAC,CAACJ,OAAO,CAACQ,IAAI,CAACX,EAAE,CAAC;MAC1C,CAAC,MAAM;QACHY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEb,EAAE,EAAE,gBAAgB,CAAC;MAChD;IACJ,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA,OAAO,MAAMc,YAAY,GAAGhB,KAAK,IAAIA,KAAK,CAACH,MAAM,CAACA,MAAM;AACxD,OAAO,MAAM;EAAEE;AAAS,CAAC,GAAGL,WAAW,CAACuB,OAAO;AAC/C,OAAO,MAAMC,aAAa,GAAGxB,WAAW,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}