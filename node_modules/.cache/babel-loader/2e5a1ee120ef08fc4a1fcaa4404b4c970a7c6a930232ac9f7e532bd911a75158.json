{"ast":null,"code":"var _jsxFileName = \"/home/adam/flashcards-starting-code-react-v18/src/features/topics/Topics.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\n// import selector\nimport { createSlice } from '@reduxjs/toolkit';\n\n//On the '/topics' page: \n\n// Users can view all topics * Users can click on an individual \n//topic and be redirected to the page for that topic\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const topicsSlice = createSlice({\n  name: 'topics',\n  initialState: {\n    //This topics object will eventually hold all topics keyed by id\n    topics: {}\n  },\n  reducers: {\n    addTopic: (state, action) => {\n      const {\n        id,\n        name,\n        icon\n      } = action.payload;\n      state.topics[id] = {\n        id,\n        name,\n        icon,\n        quizIds: []\n      };\n    }\n  }\n});\nexport default function Topics() {\n  const topics = {}; // replace this with a call to your selector to select all the topics in state\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Topics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"topics-list\",\n      children: Object.values(topics).map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"topic\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: ROUTES.topicRoute(topic.id),\n          className: \"topic-link\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"topic-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: topic.icon,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: topic.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [topic.quizIds.length, \" Quizzes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, topic.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: ROUTES.newTopicRoute(),\n      className: \"button create-new-topic-button\",\n      children: \"Create New Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = Topics;\nvar _c;\n$RefreshReg$(_c, \"Topics\");","map":{"version":3,"names":["React","Link","ROUTES","createSlice","jsxDEV","_jsxDEV","topicsSlice","name","initialState","topics","reducers","addTopic","state","action","id","icon","payload","quizIds","Topics","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","topic","to","topicRoute","src","alt","length","newTopicRoute","_c","$RefreshReg$"],"sources":["/home/adam/flashcards-starting-code-react-v18/src/features/topics/Topics.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\n// import selector\nimport { createSlice } from '@reduxjs/toolkit';\n\n//On the '/topics' page: \n\n// Users can view all topics * Users can click on an individual \n//topic and be redirected to the page for that topic\n\nexport const topicsSlice = createSlice({\n  name: 'topics',\n  initialState: {\n    //This topics object will eventually hold all topics keyed by id\n    topics: {}\n  },\n  reducers: {\n    addTopic: (state, action) => {\n      const { id, name, icon } = action.payload;\n      state.topics[id] = {\n        id,\n        name,\n        icon,\n        quizIds: []\n      }\n    }\n  }\n});\n\n\nexport default function Topics() {\n  const topics = {}; // replace this with a call to your selector to select all the topics in state\n\n  return (\n    <section className=\"center\">\n      <h1>Topics</h1>\n      <ul className=\"topics-list\">\n        {Object.values(topics).map((topic) => (\n          <li className=\"topic\" key={topic.id}>\n            <Link to={ROUTES.topicRoute(topic.id)} className=\"topic-link\">\n              <div className=\"topic-container\">\n                <img src={topic.icon} alt=\"\" />\n                <div className=\"text-content\">\n                  <h2>{topic.name}</h2>\n                  <p>{topic.quizIds.length} Quizzes</p>\n                </div>\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <Link\n        to={ROUTES.newTopicRoute()}\n        className=\"button create-new-topic-button\"\n      >\n        Create New Topic\n      </Link>\n    </section>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}